DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS users;


CREATE TABLE IF NOT EXISTS users(
id INTEGER GENERATED ALWAYS AS IDENTITY,
name varchar(250) NOT NULL,
email varchar(250)NOT NULL,
CONSTRAINT pk_user PRIMARY KEY (id),
CONSTRAINT UQ_USER_EMAIL UNIQUE (email));

CREATE TABLE IF NOT EXISTS requests(
id INTEGER GENERATED ALWAYS AS IDENTITY,
requester_id INTEGER REFERENCES users(id),
description VARCHAR(2000),
created TIMESTAMP WITHOUT TIME ZONE,
CONSTRAINT request_id PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS items(
id INTEGER GENERATED ALWAYS AS IDENTITY,
name VARCHAR(250) NOT NULL,
description VARCHAR(500) NOT NULL,
available BOOLEAN NOT NULL,
owner_id INTEGER REFERENCES users(id),
request_id INTEGER REFERENCES requests(id),
CONSTRAINT item_id PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS bookings(
id INTEGER GENERATED ALWAYS AS IDENTITY,
start_time TIMESTAMP WITHOUT TIME ZONE,
end_time TIMESTAMP WITHOUT TIME ZONE,
item_id INTEGER REFERENCES items(id),
user_id INTEGER REFERENCES users(id),
status VARCHAR(15),
CONSTRAINT booking_id PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS comments(
id INTEGER GENERATED ALWAYS AS IDENTITY,
text VARCHAR(1000),
item_id INTEGER REFERENCES items(id) ON UPDATE CASCADE,
author INTEGER REFERENCES users(id) ON UPDATE CASCADE,
created TIMESTAMP WITHOUT TIME ZONE,
CONSTRAINT comments_id PRIMARY KEY(id)
);




